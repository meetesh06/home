"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/blogPostsData.json":
/*!********************************!*\
  !*** ./src/blogPostsData.json ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

module.exports = JSON.parse('{"categories":["IIT Mandi","Programming","R Internals","React","Testing"],"posts":[{"refId":0,"id":"Working+with+docker+behind+proxy","category":"IIT Mandi","lineage":"Proxy around campus","title":"Working with docker behind proxy","description":"Small guide on setting up docker behind IIT Mandi proxy.","created":"12-10-2022","link":"IIT Mandi/dockerBehindProxy.md","postText":"\\n## Why is docker under a proxy a pain?\\n\\nDocker containers are designed to be isolated from the host system, which can create complications when trying to configure a proxy. This means that if you want to use a proxy server within a Docker container, you need to set it up specifically for that container. Depending on your setup, this may involve configuring the proxy server to forward requests to the container, or setting up the container to use a proxy on its own.\\n\\nDocker containers often have their own network configuration, which can make it difficult to connect to external resources through a proxy. This is because the proxy server needs to be able to route traffic between the container and the external resource, which can require some additional configuration.\\n\\nProxy servers often rely on authentication and other security measures, which can be difficult to implement within a Docker container. This is because the container may not have access to the necessary credentials or certificates to authenticate with the proxy server.\\n\\n## The setup\\n\\nSetting up Docker can be a daunting task for beginners, and even experienced users may encounter unexpected issues during installation and configuration. It often requires a good understanding of networking and system administration concepts, as well as familiarity with the Docker ecosystem and related tools.\\n\\n(Fortunately, in this case, I must thank Arjun who had already figured this out :)).\\n\\n\\n1. The first step is installation.\\n```bash\\nsudo apt install docker.io \\n```\\n2. Set user group to docker (so that we can used docker without sudo)\\n```bash\\nsudo groupadd docker\\nsudo usermod -aG docker $USER \\n```\\n​\\n3. Restart the computer for the user group changes to take place\\n```bash\\ngroups\\n```\\n​\\nThis should now list the groups the user belongs to, docker should be one of them.\\n​\\n4. Setting up proxy, using systemd\\n​\\n```bash\\n# create the directory for docker systemd service\\nsudo mkdir -p /etc/systemd/system/docker.service.d\\nsudo touch /etc/systemd/system/docker.service.d/http-proxy.conf\\n```\\n​\\n5. Edit the http-proxy.conf\\n​\\n```bash\\nsudo gedit /etc/systemd/system/docker.service.d/http-proxy.conf\\n```\\n​\\nPaste the following into the file, make sure to fill in the username and password.\\n​\\n```bash\\n[Service]\\nEnvironment=\\"HTTP_PROXY=http://<username>:<password>@gateway.iitmandi.ac.in:8080\\"\\nEnvironment=\\"HTTPS_PROXY=http://<username>:<password>@gateway.iitmandi.ac.in:8080\\"\\nEnvironment=\\"NO_PROXY=localhost,127.0.0.1\\"\\n```\\n​\\n6. Restart the docker daemon\\n​\\n```bash\\nsudo systemctl daemon-reload\\nsudo systemctl restart docker\\n```\\n​\\n7. Verify that proxy is working by pulling some image\\n​\\n```bash\\ndocker pull ubuntu:20.04\\n```\\n","backup":""},{"refId":1,"id":"Traveling+to+IIT+Mandi+cheaply+and+comfortably","category":"IIT Mandi","lineage":"Travel","title":"Traveling to IIT Mandi cheaply and comfortably","description":"Detailed guide on getting to the IIT campus.","created":"12-02-2023","link":"IIT Mandi/gettingToIITMandi.md","postText":"\\n\\n## Packing for the journey\\nTraveling through mountainous terrain can be a strenuous experience, especially during an overnight journey from Delhi. To help make the journey more comfortable, it\'s a good idea to pack some light snacks for the trip. I usually recommend packing fruits such as oranges and apples that can provide a quick and healthy energy boost.\\n\\nFor individuals who experience motion sickness or dizziness due to diesel fumes, it\'s essential to carry anti-nausea medication like Vomisel, which can be easily obtained over the counter at any chemist.\\n\\nWhen it comes to traveling to IIT Mandi, there are two good options that I would recommend.\\n\\n***\\n\\n## (Recommended) Option 1: Via Delhi\\n\\n***\\n\\n\\n### 1. Which bus to book?\\nIf you\'re traveling to IIT Mandi via bus, my top recommended bus service for this route is the government-run [HRTC](https://www.hrtchp.com/hrtc_info/) buses. These buses offer a reliable and comfortable journey, with the added convenience of being able to book tickets online through the HRTC Official Website. The HRTC buses typically depart in the evening (around 7PM), and the last bus of the day departs at 9:50 PM, so it\'s essential to plan your journey accordingly. I highly recommend booking an AC Volvo for a more comfortable journey.\\n\\nAnother good option for bus travel is Zingbus. However, in my personal experience, I prefer HRTC over Zingbus. I had a bad experience with a Zingbus driver who forgot to stop at a scheduled stop and refused to come back to pick us up. However, not all Zingbus drivers are the same, and it could have just been my unfortunate experience.\\n\\n\\n> __A word of caution:__ If you\'re planning to travel by bus to IIT Mandi, be careful of private bus operators offering deals outside of ISBT. I strongly advise against taking such offers. In my past experience, I once missed my HRTC bus and had to take a private bus as an alternative. It turned out to be the worst bus journey of my life, as the bus was full of loud and aggressive drunk people who were doing drugs. When I asked for a refund, they refused. I had no choice but to continue with the journey, and I vowed never to do it again.\\n\\n> To avoid such unpleasant experiences, it\'s always better to stick with government-run bus services like HRTC, which offer reliable and safe journeys at reasonable rates. So, be cautious and make wise choices while traveling to IIT Mandi by bus.\\n\\n### 2. ISBT Kasmere gate\\nIf you\'re traveling to ISBT Kasmere Gate in Delhi, the Delhi Metro is a well-connected and convenient option. You can easily reach the Kasmere Gate Metro Station and take **Exit Gate 7** to reach the ISBT Kasmere Gate.\\n\\nUsing the Delhi Metro is a great way to avoid the hassle of traffic congestion and enjoy a smooth and comfortable journey. So, plan your trip accordingly and make the most of the Delhi Metro\'s extensive network to reach your destination hassle-free.\\n***\\n\\n## Option 2: Via Chandigarh\\n\\n***\\n\\n### 1. Which bus to book?\\nWhen traveling from Chandigarh to Mandi, I recommend taking a government-run bus such as HRTC or PUNBUS. There are frequent buses on this route, and the journey takes around 5-6 hours. I usually opt for a non-volvo bus that has charging facilities, but you can choose whichever type of bus suits you. While it\'s possible to buy tickets at the bus stop, I suggest booking them online using the [HRTC Official Website](https://www.hrtchp.com/hrtc_info/) for peace of mind. HRTC is my preferred option as it\'s reliable and offers good service.\\n\\n**Note: Carry cash with you if you are planning to buy tickets offline, they don\'t usually accept UPI.**\\n\\n### 2. ISBT Sector-43\\nTo catch a bus to Himachal Pradesh from Chandigarh, head to ISBT Sector-43. Keep in mind that Sector-17 is only for local buses towards Punjab, so don\'t get confused. If you\'re not sure where to go, don\'t hesitate to ask for help from the friendly locals. Chandigarh is a beautiful place with warm and welcoming people.\\n\\n***\\n\\n \\n## Getting to campus from Mandi\\n\\n***\\nIf you\'re a new student and don\'t have the option to book a bus from Mandi to the campus, there are two good alternatives:\\n\\n1. (Recommended if you have luggage) Take a cab: You can easily find a cab outside the bus stop that will take you to the campus. Keep in mind that the price will be high (currently around Rs. 900), so it\'s better to have a travel partner to split the bill. If you can\'t find anyone, you can contact a local cab service like Him White Cabs (ask for Naresh or Manish at 09418156918). I\'ve gone on many trips with them and highly recommend them. Feel free to mention my blog if you choose to travel with them.\\n\\n2. (Recommended if you don\'t have much luggage) Take a local bus: You can take a local bus from ISBT Mandi that goes to Kamand. If you\'re going to South Campus, take a ticket for Kamand (which is also known as IIT Kamand Campus). If you\'re going to North Campus, take a ticket for Salgi (which is the village right outside the North Campus and also the road that goes to Kullu Manali). Keep in mind that this is a busy route and the bus will be fully packed most of the time. However, the journey only takes around 30-40 minutes and costs just Rs. 25 compared to the cab option, which is more than 30 times the cost. I personally prefer this option when I don\'t have much luggage.","backup":""},{"refId":2,"id":"Logging+into+proxy+over+the+terminal","category":"IIT Mandi","lineage":"Proxy around campus","title":"Logging into proxy over the terminal","description":"In situations where a login system is used to restrict internet access, remote work can be challenging because it may require periodic logins to the gateway.","created":"24-01-2023","link":"IIT Mandi/remotelogin.md","postText":"\\n## Uses of a terminal based web browser\\n\\nIn situations where a login system is used to restrict internet access, remote work can be challenging because it may require periodic logins to the gateway. Fortunately, in most cases, remote access to these systems can be achieved via SSH. However, remote desktop access over SSH may not always be possible or practical. In such cases, a quick and simple alternative is to use a terminal-based browser that can be used to log in to the gateway remotely over SSH.\\n\\nBy using a terminal-based browser, such as Lynx or w3m, users can access web-based login pages and other web content without the need for a graphical user interface or remote desktop software. This approach can be particularly useful for remote work or accessing web content on systems that are not accessible via a graphical interface.\\n\\nOverall, using a terminal-based browser to access web content remotely over SSH is a simple and effective way to overcome login restrictions and perform remote work more efficiently.\\n\\n​\\n1. Install [w3m](https://manpages.ubuntu.com/manpages/trusty/man1/w3m.1.html)\\n```\\n> sudo apt install w3m\\n```\\n\\n2. Visit some page using the browser, you will be redirected to the gateway login page.\\n```\\n> w3m google.com\\n\\n\\n[logo]\\n\\nINTERNET ACCESS\\n\\n(Hostel Area)\\n\\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\\n❇ | WING ℹ | INSITE\\n\\nIIT Mandi LDAP Login\\n\\n[                    ]\\n[                    ]\\n[Submit] [Reset]\\nCopyright © - All Rights Reserved - IIT Mandi\\n\\n```    \\n\\n3. Login and then do ctrl+z this will keep the session active in the background for that bash session until exit.\\n","backup":""},{"refId":3,"id":"Setting+up+a+reliable+benchmarking+machine","category":"Programming","lineage":"Benchmarking","title":"Setting up a reliable benchmarking machine","description":"Reproducible benchmarking is particularly important in fields such as scientific computing, machine learning, and high-performance computing, where accurate performance measurements are crucial for making informed decisions and advancing research.","created":"09-12-2021","link":"Programming/benchmarking.md","postText":"\\n## We want reproducible results!!!\\n\\nReproducible results are research findings that can be independently reproduced by other researchers using the same data, methods, and procedures. In other words, reproducible results are those that can be verified and validated by other researchers, thereby increasing confidence in the validity and reliability of the findings.\\n\\nReproducibility is an important aspect of scientific research, as it helps to ensure that research findings are not the result of chance or bias. Reproducible results also allow other researchers to build upon existing findings, to verify or extend them, and to generate new knowledge.\\n\\nTo ensure reproducibility, researchers must use transparent and rigorous methods, document their procedures and data, and make their data and code openly available to other researchers. This helps to reduce the likelihood of errors, bias, or other factors that could affect the validity and reliability of research findings.\\n\\n## (Option 1) My solution\\n\\nI use this script to set up core shielding on my i7 12700k for benchmarking purposes. This ensures that the variance is typically less than 0.5% with performance, which is in line with expectations (as recommended by [LLVM](https://llvm.org/docs/Benchmarking.html)).\\n\\nWhile it\'s possible to turn off power-saving features and disable cores from the terminal, I prefer to do it in the BIOS for greater control. You can use this script to enable core shielding directly, but don\'t worry if it doesn\'t work – the shields are reset on reboot in case it doesn\'t.\\n\\nOverall, this script helps to ensure more accurate and reliable benchmarking results by optimizing the CPU for testing purposes.\\n\\n```bash\\n#!/bin/bash\\n​\\n# Ref: https://llvm.org/docs/Benchmarking.html\\n​\\nif [ \\"$EUID\\" -ne 0 ]\\n  then echo \\"Please run this script as root\\"\\n  exit\\nfi\\n​\\n#\\n# 1. Disable Address Space Randomization\\n#\\n​\\necho 0 > /proc/sys/kernel/randomize_va_space\\n​\\n#\\n# 2. Set scaling_governor to performance, by default it is powersave\\n# https://docs.oracle.com/cd/E37670_01/E36387/html/ol_aslr_sec.html\\n#\\n​\\nfunction setgov ()\\n{\\n    echo \\"$1\\" | sudo tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor \\n}\\n​\\nsetgov performance \\n​\\n#\\n# 3. Shield specific cpu cores, if this throws an error there might be existing cpu sets,\\n#\\tdeleting existing cpu sets is safe and does not cause any adverse affects \\n#\\t(NOTE, cpuset \'root\' will always exist and cannot be deleted)\\n#\\tother cpusets can be deleted using \'sudo cset set -d docker\', where docker is the name of the cpuset\\n#\\n​\\ncset shield -c 0-7 -k on\\n​\\n# Print the cpusets\\necho \\"=== available cpusets after shielding, there should be root, system and user ===\\"\\ncset set\\n​\\n#\\n# 4. Disable SMT (Simultaneous Multi Threading), better to disable it in the bios\\n#\\n​\\n# echo 0 > /sys/devices/system/cpu/cpuX/online\\n​\\n#\\n# 5. Disable turbo boost, better to disable it in the bios\\n#\\n​\\n# echo 1 > /sys/devices/system/cpu/intel_pstate/no_turbo\\n\\n```\\n\\n\\nYou can now run your programs in the shielded cores using.\\n\\n```\\n# Can also use perf to get more reliable measurements\\ncset shield --exec -- perf stat -r 10 <cmd>\\n```\\n\\n## (Option 2) Rebench\\n\\nReBench is a powerful and versatile tool that can be used to automate benchmark experiments and document the results. While it is primarily used for benchmarking language implementations, it can also be used to monitor the performance of a wide range of other applications and programs.\\n\\nWith ReBench, you can easily define and execute benchmark experiments, analyze and visualize the results, and compare the performance of different versions of your code. This makes it a valuable tool for optimizing the performance of your applications and ensuring that they meet your performance goals.\\n\\nWhether you\'re developing software for scientific computing, data analytics, machine learning, or any other field, ReBench can help you achieve more accurate and reliable benchmarking results, and ultimately improve the performance of your code.\\n\\n### Rebench Denoise\\n\\nIt also features a denoise feature to reduce the system noise by using core shielding and other Linux Features.\\n\\nDenoise is a powerful tool that can be used to configure a Linux system for benchmarking purposes. By adapting the parameters of CPU frequency management and task scheduling, Denoise helps to reduce some of the variability that can lead to widely different benchmark results for the same experiment.\\n\\nInspired by Krun, Denoise focuses on providing a streamlined and self-contained solution that adapts a subset of the parameters to minimize external dependencies. While Krun offers a broader range of features to carefully minimize possible interference, Denoise provides an easy-to-use alternative that can still help to achieve more reliable benchmark results.\\n\\nWhether you\'re running benchmark experiments for scientific computing, machine learning, or any other field, Denoise can help to optimize your system for testing purposes and ensure that your results are more accurate and reproducible.\\n\\n### SOURCES\\n\\n__source 1__: [Rebench](https://github.com/smarr/ReBench)\\n\\n","backup":""},{"refId":4,"id":"What+is+multiple+dispatch++","category":"Programming","lineage":"Dispatch","title":"What is multiple dispatch ?","description":"Multiple dispatch is a programming paradigm in which the behavior of a function or method is determined by the types of all its arguments, not just the type of the receiver object. In other words, multiple dispatch enables a function to have different behaviors depending on the runtime types of its arguments.","created":"22-11-2022","link":"Programming/multipleDispatch.md","postText":"\\nI initially struggled to grasp the significance of a feature like multiple dispatch, but as with many things, the devil is in the details.\\nFor those unfamiliar with dispatch or multiple dispatch, I believe this will be an informative read. \\nWhile those well-versed in the subject may find this explanation incomplete, I welcome any feedback or further insights.\\n\\nTo illustrate the essence and broader implications of multiple dispatch, consider a simple example that has been hiding in plain sight all along. \\nBy exploring how multiple dispatch handles the different combinations of input parameters, we can see how it provides a powerful tool for solving complex problems in a clear and concise manner. \\nWith this understanding, it becomes clear why multiple dispatch is an important feature to have in any modern programming language.\\n\\n\\n## Design a game in Java with the following specification\\n\\nTo give an analogy, let\'s imagine that you are an architect designing a building with two main components: **People** and **Objects**. In this building, people can move around and interact with objects in various ways.\\n\\nLet\'s say we have the following subclasses.\\n```R\\nPeople  <- Husband, Maid and Wife\\nObjects <- Piano, Fridge and Other\\n```\\nAnd we have the following interactions.\\n```R\\n1. (Husband, Piano): Play the piano\\n2. (Maid, Piano): Clean the piano\\n3. (Wife, Piano): Regret marrying a Musician\\n4. (Husband, Fridge): Pour a drink\\n5. (Maid, Fridge): Restock if empty\\n6. (Wife, Fridge): Update the grocery list\\n7. (Husband, Other): Ignore\\n8. (Maid, Other): Look in awe\\n9. (Wife, Other): Draw a sketch\\n```\\nNow in our game we are maintaining a list of People and list of Objects and we randomly pick one person from a people list and one object from objects list.\\n\\n```java\\nList<People> people = [person1, person2...]\\nList<Objects> object = [obj1, obj2...]\\n\\n```\\n\\nDepending on the actual subclass of the People and Object we must select a unique action, this would require us to do something like:\\n\\n```java\\nif (instanceof(person) == Husband && instanceof(object) == Piano) {\\n  // Play the piano\\n} else if (instanceof(person) == Husband && instanceof(object) == Fridge) {\\n  // Pour a drink\\n}\\n```\\n\\n> Formally, we want to select a method to **dispatch** based on the runtime type of two arguments.\\n> This is a special case of multiple dispatch known as **double dispatch**.\\n> Even though Java doesn\'t natively support beyond one level of dispatch, we can simulate this using the __Visitor Pattern__.\\n\\n\\n## (Double dispatch) The Visitor Pattern in Action\\n\\nWe can make use of something called the [visitor pattern](/blog/The+Visitor+Pattern/) where we can simulate **double** dispatch in a language like java which does not really support it.\\n\\nLet us first define the classes that we are working with.\\n\\n```java\\nclass Person {} // Base class for all people\\nclass Objects {} // Base class for all objects\\n\\nclass Husband extends Person { // Husband Class\\n  void action(Piano p) { } // Play the piano\\n  // Others...\\n} \\nclass Wife extends Person {} // Wife Class\\nclass Maid extends Person {} // Maid Class\\n\\nclass Piano extends Objects {} // Piano Class\\nclass Fridge extends Objects {} // Fridge Class\\nclass Other extends Objects {} // Other Class\\n```\\n\\nThe first thing to notice is that as we keep adding different objects to our game we will end up having to create a new methods inside each Husband, Wife, Maid Class.\\nThis is a bad design, we will first separate out this actions like this.\\n\\n#### 1) Create a ObjectVisitor interface that is accepted by all people.\\n\\n```java\\n\\ninterface ObjectVisitor { // This ensures the all Objects do something when they match with a specific person\\n  void visit(Husband h);\\n  void visit(Wife w);\\n  void visit(Maid m);\\n}\\n\\ninterface Acceptor { // This ensures the all People can accept a ObjectVisitor Object\\n  void accept(ObjectVisitor visitor);\\n}\\n\\nclass Husband extends Person implements Acceptor { // Husband Class\\n  void accept(ObjectVisitor visitor) {\\n    visitor.visit(this); // This is the subtle part\\n  }\\n}\\n// ... Other people similarly\\n```\\n\\nNotice that in this case we are sending the current runtime object **this** to the accept method, so when **visitor.accept(this)** is called, it will invoke the accept method **accept(Husband h);** automatically. Similarly when we add this to Wife and Main subclasses, the accept method triggers **accept(Wife w);** and **accept(Maid m);** respectively.\\n\\n\\n#### 2) Create Object classes with the logic separated.\\n\\n```java\\n\\ninterface ObjectVisitor {\\n  void accept(Husband h);\\n  void accept(Wife w);\\n  void accept(Maid m);\\n}\\n\\nclass Piano extends ObjectVisitor {\\n  void accept(Husband h) { } // Play the piano\\n  void accept(Wife w) { } // Regret marrying a Musician \\n  void accept(Maid m) { } // Clean the piano\\n}\\n// ... Other objects similarly\\n```\\n\\nSee how we were able to neatly elegantly separate out our logic, now whenever a new Object is added to the game it will automatically know what to do and what method to dispatch.\\n\\n#### 3) In Action\\n\\n```java\\n\\nPerson p1 = new Husband();\\nPerson p2 = new Wife();\\nPerson p3 = new Maid();\\n// ...\\nObject o1 = new Piano();\\np1.accept(o1);\\n```\\n\\nWhen we call the **p1.visit(o1)** the following happens.\\n\\n1. The accept method of Husband Class is invoked.\\n\\n```java\\nclass Husband extends Person implements Acceptor {\\n  void accept(ObjectVisitor visitor) {\\n    visitor.visit(this); // <- This method is invoked\\n  }\\n}\\n```\\n> __Subtle Point to note:__ Inside Husband Class\'s accept method, the type of **this** pointer is of type Husband and not Person. \\n\\n2. When a ObjectVisitor object sees a Husband Class object it selects the accept method that takes argument of type Husband.\\n\\n```java\\nclass Piano extends ObjectVisitor {\\n  void accept(Husband h) { } // <- This method is invoked\\n  void accept(Wife w) { }\\n  void accept(Maid m) { }\\n}\\n```\\n\\n### In summary\\n\\nIn double dispatch we were able to put together logic that was able to take the runtime type of 2 objects into consideration and efficiently dispatch a method based on them.\\n\\n```bash \\n# Given two runtime objects that are stored in their base class containers\\n(object1 x object2) - call function X\\n\\n# Select the most precise method based on the types of both the classes\\n(Husband x Piano) - call function 1\\n(Wife x Piano) - call function 2\\n(Maid x Piano) - call function 3\\n...\\n```\\n\\nThis is usually the limit to which we can push traditional languages like Java, C++, etc. \\n\\n## (Multiple Dispatch) No efficient ways?\\n\\nWe saw that we can do this naively using the **instanceof** checks, even though it works it\'s very inefficient and rarely used in places where performance is needed.\\n\\nThis is where multiple dispatch comes in. With multiple dispatch, the function is called based on the types of both the person and the object, allowing for more specific and nuanced behavior. For example, if a person interacts with a chair, the function might behave differently than if they interacted with a table.\\n\\nWhile the concept of multiple dispatch can be complex, it allows for more flexible and customizable interactions in a program, making it a valuable tool for game developers and other software engineers.\\n\\nSome languages like R do support this feature, but from my experience is somewhat out of grasp of most people and rarely gets used outside the community.\\n\\n```bash \\n# Given two runtime objects that are stored in their base class containers\\n(object1 x object2 x object3 x ...) - call function X\\n\\n# Select the most precise method based on the types of both the classes\\n(Husband x Piano x ...) - call function 1\\n(Wife x Piano x ...) - call function 2\\n(Maid x Piano x ...) - call function 3\\n...\\n```\\n\\nSome languages like R do support this feature, but from my experience is somewhat out of grasp of most people and rarely gets used outside the community.\\nI will sometime make a post about the working on this feature and how its implemented in R.\\n\\n### SOURCES\\n\\n__source 1__: [wiki.c2 article on Multiple Dispatch](https://wiki.c2.com/?MultipleDispatch)\\n\\n__source 2__: [Prototypes with Multiple Dispatch: An Expressive and Dynamic Object Model](https://www.cs.cmu.edu/~aldrich/papers/ecoop05pmd.pdf)\\n","backup":""},{"refId":5,"id":"The+Visitor+Pattern","category":"Programming","lineage":"Dispatch","title":"The Visitor Pattern","description":"The Visitor Pattern can be particularly useful in cases where a large and complex object hierarchy needs to be modified or extended with new functionality over time, without disrupting existing code that uses the hierarchy.","created":"11-02-2023","link":"Programming/visitorPattern.md","postText":"\\n## What is the visitor pattern?\\n\\nThe Visitor Pattern is a design pattern in object-oriented programming that allows for adding new behaviors or operations to existing classes or object structures without changing their structure.\\nThe pattern defines two main components.\\n\\n1. A set of **visitor classes** that define the new behavior or operation to be performed on the elements of the object structure.\\n2. A set of elements or classes that **accept visitors** and provide access to their internal state.\\n\\nWith this pattern, the visitor object is passed to the element object, and the element object accepts the visitor object and invokes its methods to perform the operation. This way, the element object can be processed in a way that is specific to the visitor object\'s behavior, without the need to modify the element object\'s code.\\n\\nIf you are still confused, don\'t worry, I have a video explaining it in detail that should make it crystal clear and intuitive to understand.\\n\\n[Youtube: The Visitor Pattern and Multiple Dispatch](https://www.youtube.com/watch?v=8SNVSRarXSA)\\n\\n","backup":""},{"refId":6,"id":"What+are+R+objects+really+","category":"R Internals","lineage":"S-Expressions","title":"What are R objects really?","description":"My intuition on the topic of multiple dispatch","created":"02-09-2021","link":"R-internals/parent.md","postText":"\\n[R Melts Brain - research paper of concern](https://dl.acm.org/doi/10.1145/3359619.3359744)\\n\\nWelcome to the parent post for my upcoming series on R programming. In this series, I\'ll be diving deep into various topics related to R programming and its ecosystem.\\n\\nAs I explore different aspects of R programming, I\'ll be sharing my insights and experiences with you in subsequent posts. Here are some topics that I\'m planning to cover:\\n\\n1. R\'s handling of environments and its implications\\n2. Challenges in R\'s static analysis\\n3. Intermediate language\'s for R\\n4. and more, as I continue to learn and explore.\\n\\nI hope you\'ll find this series informative and useful in your own work with R programming. Let\'s dive in and learn together!","backup":""},{"refId":7,"id":"How+this+blog+was+crudely+put+together+in+one+weekend+","category":"React","lineage":"How this blog works","title":"How this blog was crudely put together in one weekend.","description":"I haven\'t used react in a long time, my code might look really stupid, but it works. hopefully this blog\'s design improves with time and you will get to learn a few things along the way.","created":"02-09-2021","link":"React/testPost.md","postText":"\\n# No actions, only reactions\\n\\nI am excited to share with you a new tool I created that generates this blog/website automatically. You can check it out here: [easyNextBlog](https://github.com/meetesh06/easyNextBlog)\\n\\nThis post serves as a starting point for the topics that will be covered in subsequent posts. As I continue to make progress in this area, I will share more information with you.\\n\\nSome of the topics that will be covered in the future include:\\n\\n1. Implementing proper state handling in this blog\\n2. Exploring why the blog works well despite potential redundancy issues\\n3. The importance of writing clean and efficient code, even if the server will likely cache it anyway\\n4. And more, as new insights arise\\n\\nI\'m excited to dive deeper into these topics with you and share my learnings along the way. Stay tuned for more!","backup":""},{"refId":8,"id":"Testing+the+markdown+parsing+","category":"Testing","lineage":"Markdown Parser","title":"Testing the markdown parsing.","description":"A bunch of text that tests the various kinds of text being parsed.","created":"02-09-2021","link":"Testing/test.md","postText":"# This is h1\\n\\n## This is h2\\n\\n### This is h3\\n\\n#### This is h4\\n\\n##### This is h5\\n\\n###### This is h6\\n\\n***\\n\\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam dignissim suscipit diam. Proin ligula elit, consequat a lorem sed, efficitur suscipit ante. Vivamus iaculis est sed velit aliquam facilisis. Praesent eget turpis sit amet augue facilisis ultrices. Etiam pellentesque, ante ac hendrerit consectetur, purus augue porttitor ex, non consequat nisi est eu eros. Donec ac nisl malesuada, vehicula justo eget, mattis tortor. Cras luctus efficitur neque eu efficitur. Nullam rhoncus laoreet eleifend.\\n\\nUt nibh nisi, mattis non justo vel, viverra ullamcorper sem. Cras sollicitudin, tortor aliquet tempus fringilla, odio mi hendrerit ligula, ac feugiat ipsum nisi eu nibh. Sed porttitor laoreet pellentesque. Donec semper, velit vitae ornare interdum, tellus nisl rhoncus odio, eu ornare diam leo et erat. In hac habitasse platea dictumst. Nulla id odio imperdiet, rhoncus sapien ac, efficitur mauris. Morbi finibus risus eu facilisis pharetra. Phasellus varius purus et felis tincidunt tincidunt. Sed eleifend ante fringilla, consectetur nulla vel, sollicitudin eros. Nullam in neque id lacus tincidunt tempus. Nam dui sem, mollis vitae suscipit in, dignissim sed justo. Quisque eget consequat ex, non efficitur ex.\\n\\n- First item\\n- Second item\\n- Third item\\n- Fourth item\\t\\n\\n* First item\\n* Second item\\n* Third item\\n* Fourth item\\t\\n\\n+ First item\\n+ Second item\\n+ Third item\\n+ Fourth item\\t\\n\\n- First item\\n- Second item\\n- Third item\\n    - Indented item\\n    - Indented item\\n- Fourth item\\t\\n\\n1. First item\\n2. Second item\\n3. Third item\\n4. Fourth item\\t\\n\\n1. First item\\n1. Second item\\n1. Third item\\n1. Fourth item\\t\\n\\n1. First item\\n8. Second item\\n3. Third item\\n5. Fourth item\\t\\n\\n\\n1. First item\\n2. Second item\\n3. Third item\\n    1. Indented item\\n    2. Indented item\\n4. Fourth item\\t\\n\\n| Syntax | Description |\\n| --- | ----------- |\\n| Header | Title |\\n| Paragraph | Text |\\n","backup":""}],"secrets":[]}');

/***/ })

});